trigger:
  branches:
    include:
      - main

variables:
  buildDirectory: "$(Build.ArtifactStagingDirectory)/build"
  outputDir: $(Build.ArtifactStagingDirectory)
  downloadedPackageDirectory: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
  serviceName: stronzo-tapegandofogo-core
  solution: TPF.Core.sln
  poolName: Azure.Pool.Stronzo

pool: $(poolName)

stages:
  - stage: "build"
    displayName: "Build"
    jobs:
      - job: "build"
        displayName: "Build"
        steps:
          - task: UseDotNet@2
            displayName: "Use Dotnet 6.0.x"
            inputs:
              packageType: "sdk"
              version: "6.0.x"

          - task: DotNetCoreCLI@2
            displayName: "Dotnet Restore"
            inputs:
              command: "restore"
              projects: $(solution)

          - task: DotNetCoreCLI@2
            displayName: "Dotnet Build"
            inputs:
              command: "custom"
              custom: "build"
              projects: $(solution)
              arguments: "-c $(configuration) --no-restore"

          - task: DotNetCoreCLI@2
            displayName: "Dotnet Publish"
            inputs:
              command: "publish"
              publishWebProjects: false
              projects: $(solution)
              arguments: '-c $(configuration) -o "$(buildDirectory)" --no-build --no-restore'
              zipAfterPublish: false

          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: $(buildDirectory)/s
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(outputDir)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - task: ArchiveFiles@2
            displayName: "Zip IaC Files"
            inputs:
              rootFolderOrFile: "$(Build.SourcesDirectory)/.iac"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(outputDir)/terraform-files.zip"
              replaceExistingArchive: false

          - publish: $(outputDir)
            displayName: "Publish artifact"
            artifact: drop

  - template: deployment.yml
    parameters:
      pool: $(poolName)
      environment: Development
      shortEnv: dev
      dependsOn: Build
      variables:
        - group: "Stronzo - TaPegandoFogo"
        - name: ARM_ACCESS_KEY
          value: $(IacStorageAccountAccessKey)
      subscription: "Azure for Students(2fcfcc58-7a29-4b99-838f-93fa031f18a5)"
      serviceName: $(serviceName)
      packageDirectory: $(downloadedPackageDirectory)
      terraformFilesPath: terraform-files.zip
